<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sparrow.interact.admin.dao.ReplyCommentDAO">
<resultMap id="ReplyCommentMap" type="com.sparrow.interact.po.ReplyComment">
<id column="id" property="id" />
 <result column="article_id" property="articleId"/>
 <result column="root_reply_comment_id" property="rootReplyCommentId"/>
 <result column="content" property="content"/>
 <result column="like_count" property="likeCount"/>
 <result column="reply_comment_id" property="replyCommentId"/>
 <result column="reply_to_user_id" property="replyToUserId"/>
 <result column="reply_to_user_name" property="replyToUserName"/>
 <result column="status" property="status"/>
 <result column="create_user_id" property="createUserId"/>
 <result column="gmt_create" property="gmtCreate"/>
 <result column="modified_user_id" property="modifiedUserId"/>
 <result column="gmt_modified" property="gmtModified"/>
 <result column="create_user_name" property="createUserName"/>
 <result column="modified_user_name" property="modifiedUserName"/>
</resultMap>
<sql id="fields">
`id`,
`article_id`,
`root_reply_comment_id`,
`content`,
`like_count`,
`reply_comment_id`,
`reply_to_user_id`,
`reply_to_user_name`,
`status`,
`create_user_id`,
`gmt_create`,
`modified_user_id`,
`gmt_modified`,
`create_user_name`,
`modified_user_name`
</sql>
<insert id="insert" parameterType="com.sparrow.interact.po.ReplyComment"  useGeneratedKeys="true" keyColumn="id" keyProperty="id">
insert into `reply_comment`(
`article_id`,
`root_reply_comment_id`,
`content`,
`like_count`,
`reply_comment_id`,
`reply_to_user_id`,
`reply_to_user_name`,
`status`,
`create_user_id`,
`gmt_create`,
`modified_user_id`,
`gmt_modified`,
`create_user_name`,
`modified_user_name`)values(
#{articleId},
#{rootReplyCommentId},
#{content},
#{likeCount},
#{replyCommentId},
#{replyToUserId},
#{replyToUserName},
#{status},
#{createUserId},
#{gmtCreate},
#{modifiedUserId},
#{gmtModified},
#{createUserName},
#{modifiedUserName})</insert> 
<update id="update" parameterType="com.sparrow.interact.po.ReplyComment">
update `reply_comment` set 
`article_id`=#{articleId},
`root_reply_comment_id`=#{rootReplyCommentId},
`content`=#{content},
`like_count`=#{likeCount},
`reply_comment_id`=#{replyCommentId},
`reply_to_user_id`=#{replyToUserId},
`reply_to_user_name`=#{replyToUserName},
`status`=#{status},
`modified_user_id`=#{modifiedUserId},
`gmt_modified`=#{gmtModified},
`create_user_name`=#{createUserName},
`modified_user_name`=#{modifiedUserName} where id=#{id}
</update>
<delete id="delete" parameterType="java.lang.Long">
delete from `reply_comment` where id=#{id}
</delete>
<select id="getEntity" resultMap="ReplyCommentMap" parameterType="java.lang.Long">
 SELECT 
<include refid="fields"/>
 FROM 
reply_comment
WHERE id= #{id}
</select>
<update id="changeStatus" parameterType="com.sparrow.protocol.dao.StatusCriteria">
update `reply_comment` set `status`=#{status},
`modified_user_name`=#{modifiedUserName},
 `modified_user_id`=#{modifiedUserId},
 `gmt_modified`=#{gmtModified} WHERE id IN
<foreach collection="idArray" item="id" index="index" open="(" close=")" separator=",">
#{id}</foreach>
</update></mapper>